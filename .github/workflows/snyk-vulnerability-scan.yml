name: Security Scanning with Trivy & Snyk

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # Runs daily

permissions:
  security-events: write  # Upload SARIF reports
  contents: read          # Scan repo contents
  issues: write           # Create GitHub issues

jobs:
  security-scan:
    name: Run Trivy & Snyk Security Scans
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # ðŸ”¹ Run Trivy Scanner
      - name: Run Trivy Vulnerability Scanner
        uses: aquasecurity/trivy-action@0.11.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy Scan Results to GitHub Security Tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      # ðŸ”¹ Run Snyk Scanner
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test
          args: "--sarif-file-output=snyk-results.sarif"

      - name: Upload Snyk Scan Results to GitHub Security Tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-results.sarif

      # ðŸ”¹ Fetch Dependabot Alerts & Create Issues
      - name: Fetch Dependabot Alerts & Create Issues
        run: |
          DEPENDABOT_ALERTS=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" \
            "https://api.github.com/repos/${{ github.repository }}/dependabot/alerts")

          echo "$DEPENDABOT_ALERTS" | jq -c '.[]' | while IFS= read -r alert; do
            PACKAGE_NAME=$(echo "$alert" | jq -r '.dependency.package.name')
            SEVERITY=$(echo "$alert" | jq -r '.security_vulnerability.severity')
            ALERT_URL=$(echo "$alert" | jq -r '.html_url')

            if [[ -n "$PACKAGE_NAME" && -n "$SEVERITY" && -n "$ALERT_URL" ]]; then
              curl -X POST -H "Authorization: token ${{ secrets.GH_PAT }}" \
                -H "Accept: application/vnd.github.v3+json" \
                -d "{\"title\":\"[Dependabot] Security Issue: $PACKAGE_NAME ($SEVERITY)\", \"body\":\"[View Alert]($ALERT_URL)\", \"labels\":[\"security\", \"dependabot\"]}" \
                "https://api.github.com/repos/${{ github.repository }}/issues"
            fi
          done

      # ðŸ”¹ Fetch Code Scanning Alerts (Trivy & Snyk) & Create Issues
      - name: Create issues for code scanning alerts
        run: |
          ALERTS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/code-scanning/alerts")

          ALERT_COUNT=$(echo "$ALERTS" | jq 'length')

          if [ "$ALERT_COUNT" -gt 0 ]; then
            echo "Code scanning alerts found. Creating issues..."

            echo "$ALERTS" | jq -c '.[]' | while read -r alert; do
              RULE_NAME=$(echo "$alert" | jq -r '.rule.name')
              ALERT_URL=$(echo "$alert" | jq -r '.html_url')

              ISSUE_TITLE="Fix code scanning alert - $RULE_NAME"
              ISSUE_BODY="Tracking issue for:\n- [ ] $ALERT_URL"

              curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -d "{\"title\":\"$ISSUE_TITLE\", \"body\":\"$ISSUE_BODY\", \"labels\":[\"security\"]}" \
                https://api.github.com/repos/${{ github.repository }}/issues
            done
          else
            echo "No code scanning alerts found."
          fi
